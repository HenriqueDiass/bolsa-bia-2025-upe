# run_use_case.py

# Importamos todas as classes que vamos usar
from use_cases import (
    FetchStatesUseCase,
    FetchMunicipalitiesUseCase,
    FetchImmediateRegionsUseCase, 
    FetchIntermediateRegionsUseCase, 
)

# --- Fun√ß√µes Auxiliares para cada Tarefa ---
# Manter estas fun√ß√µes separadas deixa o menu principal mais limpo.

def run_states():
    """Executa o caso de uso para buscar dados dos estados."""
    print("\n--- Iniciando Tarefa: DADOS COMPLETOS POR ESTADO ---")
    uc = FetchStatesUseCase()
    uc.execute(output_filename="1-dados-completos-estados.geojson")
    print("--- Tarefa Conclu√≠da! ---")

def run_municipalities():
    """Pede a sigla do estado e executa o caso de uso de munic√≠pios."""
    uf = input("  -> Digite a sigla do Estado (UF) que voc√™ quer buscar (ex: PE, SP, RJ): ").upper()
    if not uf or len(uf) != 2:
        print("  -> Sigla de estado inv√°lida. Voltando ao menu.")
        return
        
    print(f"\n--- Iniciando Tarefa: MUNIC√çPIOS DE {uf} ---")
    uc = FetchMunicipalitiesUseCase()
    uc.execute(
        sigla_uf=uf, 
        output_filename=f"2-dados-completos-municipios-{uf.lower()}.geojson"
    )
    print("--- Tarefa Conclu√≠da! ---")

def run_immediate_regions():
    """Executa o caso de uso para buscar dados das regi√µes imediatas."""
    print("\n--- Iniciando Tarefa: REGI√ïES IMEDIATAS DO BRASIL ---")
    uc = FetchImmediateRegionsUseCase()
    uc.execute(output_filename="3-regioes-imediatas.geojson")
    print("--- Tarefa Conclu√≠da! ---")

def run_intermediate_regions():
    """Executa o caso de uso para buscar dados das regi√µes intermedi√°rias."""
    print("\n--- Iniciando Tarefa: REGI√ïES INTERMEDI√ÅRIAS DO BRASIL ---")
    uc = FetchIntermediateRegionsUseCase()
    uc.execute(output_filename="4-regioes-intermediarias.geojson")
    print("--- Tarefa Conclu√≠da! ---")

def display_menu():
    """Mostra o menu de op√ß√µes para o usu√°rio."""
    print("\n+------------------------------------------------------+")
    print("|            PAINEL DE CONTROLE DE COLETA              |")
    print("+------------------------------------------------------+")
    print("| 1. Baixar Dados Completos dos Estados                |")
    print("| 2. Baixar Dados dos Munic√≠pios (por Estado)          |")
    print("| 3. Baixar Dados das Regi√µes Imediatas                |")
    print("| 4. Baixar Dados das Regi√µes Intermedi√°rias           |")
    print("| 5. RODAR TUDO em sequ√™ncia                           |")
    print("| 0. Sair do programa                                  |")
    print("+------------------------------------------------------+")

# --- Bloco Principal de Execu√ß√£o ---
if __name__ == "__main__":
    
    # Loop infinito que mant√©m o menu ativo at√© o usu√°rio decidir sair
    while True:
        display_menu()
        escolha = input("Digite o n√∫mero da sua escolha e pressione Enter: ")

        try:
            # O painel de IF/ELSE que voc√™ sugeriu
            if escolha == '1':
                run_states()
            
            elif escolha == '2':
                run_municipalities()

            elif escolha == '3':
                run_immediate_regions()

            elif escolha == '4':
                run_intermediate_regions()

            elif escolha == '5':
                print("\n--- ATEN√á√ÉO: Executando todas as tarefas em sequ√™ncia. ---")
                run_states()
                run_municipalities() # Vai pedir o estado quando chegar aqui
                run_immediate_regions()
                run_intermediate_regions()
                print("\nüéâ TODAS AS TAREFAS FORAM EXECUTADAS! üéâ")

            elif escolha == '0':
                print("Saindo do programa. At√© logo!")
                break # Quebra o loop e encerra o programa
            
            else:
                print("Op√ß√£o inv√°lida! Por favor, escolha um n√∫mero do menu.")

        except Exception as e:
            print(f"\n‚ùå Ocorreu um erro inesperado durante a execu√ß√£o: {e}")
            print("Retornando ao menu principal...")

        # Pausa para o usu√°rio ler a sa√≠da antes de mostrar o menu novamente
        input("\nPressione Enter para continuar...")
